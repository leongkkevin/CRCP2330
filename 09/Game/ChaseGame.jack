
class ChaseGame {
   field Square square; // the square of this game
   field Circle circle;

   field int directionSqu;
   field int directionCir;

   field int squarePts;
   field int circlePts;

   constructor ChaseGame new() {
      let square = Square.new(0, 0, 30);
      let circle = Circle.new(50, 50, 30);

      let directionSqu = 0; 
      let directionCir = 0;

      return this;
   }

   method void dispose() {
      do square.dispose();
      do circle.dispose();
      do Memory.deAlloc(this);
      return;
   }

   method void moveSquare() {
      if (direction = 1) { do square.moveUp(); }
      if (direction = 2) { do square.moveDown(); }
      if (direction = 3) { do square.moveLeft(); }
      if (direction = 4) { do square.moveRight(); }
      do Sys.wait(5); 
      return;
   }

   method void moveCircle() {
      if (direction = 1) { do circle.moveUp(); }
      if (direction = 2) { do circle.moveDown(); }
      if (direction = 3) { do circle.moveLeft(); }
      if (direction = 4) { do circle.moveRight(); }
      do Sys.wait(5); 
      return;
   }

   /** Runs the game: handles the user's inputs and moves the square accordingly */
   method void run() {
      var char key;  // the key currently pressed by the user
      var boolean exit;
      let exit = false;
      
      while (~exit) {
         // waits for a key to be pressed
         while (key = 0) {
            let key = Keyboard.keyPressed();
            do moveSquare();
         }
         if (key = 81)  { let exit = true; }     // q key
         if (key = 90)  { do square.decSize(); } // z key
         if (key = 88)  { do square.incSize(); } // x key
         if (key = 131) { let direction = 1; }   // up arrow
         if (key = 133) { let direction = 2; }   // down arrow
         if (key = 130) { let direction = 3; }   // left arrow
         if (key = 132) { let direction = 4; }   // right arrow

         // waits for the key to be released
         while (~(key = 0)) {
            let key = Keyboard.keyPressed();
            do moveSquare();
         }
     } // while
     return;
   }
}
